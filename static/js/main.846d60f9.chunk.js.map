{"version":3,"sources":["Event.js","EventList.js","CitySearch.js","mock-data.js","api.js","NumberOfEvents.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Event","state","show","toggleEventDetails","_this","setState","event","this","props","react_default","a","createElement","className","summary","start","dateTime","timeZone","location","href","htmlLink","description","onClick","Component","EventList","events","map","key","id","src_Event","CitySearch","query","suggestions","showSuggestions","handleInputChanged","value","target","locations","filter","toUpperCase","indexOf","handleItemClicked","suggestion","updateEvents","_this2","type","placeholder","onChange","onFocus","style","display","mockData","kind","etag","status","created","updated","creator","email","self","organizer","end","recurringEventId","originalStartTime","iCalUID","sequence","reminders","useDefault","eventType","getAccessToken","_ref","Object","asyncToGenerator","_regeneratorRuntime","mark","_callee","accessToken","tokenCheck","searchParams","code","results","authUrl","wrap","_context","prev","next","localStorage","getItem","t0","checkToken","sent","error","removeItem","URLSearchParams","window","search","get","axios","data","abrupt","getToken","stop","apply","arguments","_ref2","_callee2","result","_context2","fetch","concat","then","res","json","catch","err","_x","removeQuery","history","pushState","pathname","newurl","protocol","host","_ref3","_callee3","encodeCode","_yield$fetch$then$cat","access_token","_context3","encodeURIComponent","setItem","_x2","extractLocations","toConsumableArray","Set","getEvents","_ref4","_callee4","token","url","_context4","NProgress","startsWith","done","JSON","stringify","NumberOfEvents","numberOfEvents","handleInputChange","numberValue","undefined","App","locationSelected","eventCount","locationEvents","slice","mounted","console","log","src_CitySearch","src_NumberOfEvents","src_EventList","Boolean","hostname","match","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","createRoot","document","getElementById","render","StrictMode","src_App_0","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.846d60f9.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Event extends Component {\r\n  state = {\r\n    show: false,\r\n  };\r\n\r\n  toggleEventDetails = () => {\r\n    this.setState({ show: !this.state.show });\r\n  };\r\n\r\n  render() {\r\n    const { event } = this.props;\r\n    return (\r\n      <div className=\"event\">\r\n        <h2 className=\"event-title\">{event.summary}</h2>\r\n        <p className=\"dateTime\">\r\n          {event.start.dateTime} {event.start.timeZone}\r\n        </p>\r\n        <p className=\"location\">{event.location}</p>\r\n        {this.state.show && (\r\n          <div className=\"details-container\">\r\n            <h4 className=\"event-about\">About event:</h4>\r\n            <a href={event.htmlLink} className=\"event-link\">\r\n              See details on Google Calendar\r\n            </a>\r\n            <p className=\"description\">\r\n              {event.description}\r\n            </p>\r\n          </div>\r\n        )}\r\n        <button\r\n          className=\"details-btn\"\r\n          onClick={this.toggleEventDetails}>\r\n          {!this.state.show\r\n            ? 'Show Details'\r\n            : 'Hide Details'}\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Event;\r\n","import React, { Component } from 'react';\r\nimport Event from './Event';\r\n\r\nclass EventList extends Component {\r\n  render() {\r\n    const { events } = this.props;\r\n    return (\r\n      <ul className=\"EventList\">\r\n        {events.map((event) => (\r\n          <li key={event.id}>\r\n            <Event event={event} />\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EventList;\r\n","import React, { Component } from 'react';\r\n\r\nclass CitySearch extends Component {\r\n  state = {\r\n    query: '',\r\n    suggestions: [],\r\n    showSuggestions: false,\r\n  };\r\n\r\n  handleInputChanged = (event) => {\r\n    const value = event.target.value;\r\n    const suggestions = this.props.locations.filter(\r\n      (location) => {\r\n        return (\r\n          location\r\n            .toUpperCase()\r\n            .indexOf(value.toUpperCase()) > -1\r\n        );\r\n      }\r\n    );\r\n    this.setState({ query: value, suggestions });\r\n  };\r\n\r\n  handleItemClicked = (suggestion) => {\r\n    this.setState({\r\n      query: suggestion,\r\n      showSuggestions: false,\r\n    });\r\n    this.props.updateEvents(suggestion);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"CitySearch\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"city\"\r\n          placeholder={'Filter by city'}\r\n          value={this.state.query}\r\n          onChange={this.handleInputChanged}\r\n          onFocus={() => {\r\n            this.setState({ showSuggestions: true });\r\n          }}\r\n        />\r\n        <ul\r\n          className=\"suggestions\"\r\n          style={\r\n            this.state.showSuggestions\r\n              ? {}\r\n              : { display: 'none' }\r\n          }>\r\n          {this.state.suggestions.map((suggestion) => (\r\n            <li\r\n              key={suggestion}\r\n              onClick={() =>\r\n                this.handleItemClicked(suggestion)\r\n              }>\r\n              {suggestion}\r\n            </li>\r\n          ))}\r\n          <li\r\n            key=\"all\"\r\n            onClick={() => this.handleItemClicked('all')}>\r\n            <b>See all cities</b>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CitySearch;\r\n","const mockData = [\r\n  {\r\n    kind: 'calendar#event',\r\n    etag: '\"3181161784712000\"',\r\n    id: '4eahs9ghkhrvkld72hogu9ph3e_20200519T140000Z',\r\n    status: 'confirmed',\r\n    htmlLink:\r\n      'https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MTlUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20',\r\n    created: '2020-05-19T19:17:46.000Z',\r\n    updated: '2020-05-27T12:01:32.356Z',\r\n    summary: 'Learn JavaScript',\r\n    description:\r\n      'Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.',\r\n    location: 'London, UK',\r\n    creator: {\r\n      email: 'fullstackwebdev@careerfoundry.com',\r\n      self: true,\r\n    },\r\n    organizer: {\r\n      email: 'fullstackwebdev@careerfoundry.com',\r\n      self: true,\r\n    },\r\n    start: {\r\n      dateTime: '2020-05-19T16:00:00+02:00',\r\n      timeZone: 'Europe/Berlin',\r\n    },\r\n    end: {\r\n      dateTime: '2020-05-19T17:00:00+02:00',\r\n      timeZone: 'Europe/Berlin',\r\n    },\r\n    recurringEventId: '4eahs9ghkhrvkld72hogu9ph3e',\r\n    originalStartTime: {\r\n      dateTime: '2020-05-19T16:00:00+02:00',\r\n      timeZone: 'Europe/Berlin',\r\n    },\r\n    iCalUID: '4eahs9ghkhrvkld72hogu9ph3e@google.com',\r\n    sequence: 0,\r\n    reminders: {\r\n      useDefault: true,\r\n    },\r\n    eventType: 'default',\r\n  },\r\n  {\r\n    kind: 'calendar#event',\r\n    etag: '\"3181159875584000\"',\r\n    id: '3qtd6uscq4tsi6gc7nmmtpqlct_20200520T120000Z',\r\n    status: 'confirmed',\r\n    htmlLink:\r\n      'https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjBUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20',\r\n    created: '2020-05-19T19:14:30.000Z',\r\n    updated: '2020-05-27T11:45:37.792Z',\r\n    summary: 'React is Fun',\r\n    description:\r\n      'Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. ',\r\n    location: 'Berlin, Germany',\r\n    creator: {\r\n      email: 'fullstackwebdev@careerfoundry.com',\r\n      self: true,\r\n    },\r\n    organizer: {\r\n      email: 'fullstackwebdev@careerfoundry.com',\r\n      self: true,\r\n    },\r\n    start: {\r\n      dateTime: '2020-05-20T14:00:00+02:00',\r\n      timeZone: 'Europe/Berlin',\r\n    },\r\n    end: {\r\n      dateTime: '2020-05-20T15:00:00+02:00',\r\n      timeZone: 'Europe/Berlin',\r\n    },\r\n    recurringEventId: '3qtd6uscq4tsi6gc7nmmtpqlct',\r\n    originalStartTime: {\r\n      dateTime: '2020-05-20T14:00:00+02:00',\r\n      timeZone: 'Europe/Berlin',\r\n    },\r\n    iCalUID: '3qtd6uscq4tsi6gc7nmmtpqlct@google.com',\r\n    sequence: 0,\r\n    reminders: {\r\n      useDefault: true,\r\n    },\r\n    eventType: 'default',\r\n  },\r\n  {\r\n    kind: 'calendar#event',\r\n    etag: '\"3181161784712000\"',\r\n    id: '4eahs9ghkhrvkld72hogu9ph3e_20200521T140000Z',\r\n    status: 'confirmed',\r\n    htmlLink:\r\n      'https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MjFUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20',\r\n    created: '2020-05-19T19:17:46.000Z',\r\n    updated: '2020-05-27T12:01:32.356Z',\r\n    summary: 'Learn JavaScript',\r\n    description:\r\n      'Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.',\r\n    location: 'London, UK',\r\n    creator: {\r\n      email: 'fullstackwebdev@careerfoundry.com',\r\n      self: true,\r\n    },\r\n    organizer: {\r\n      email: 'fullstackwebdev@careerfoundry.com',\r\n      self: true,\r\n    },\r\n    start: {\r\n      dateTime: '2020-05-21T16:00:00+02:00',\r\n      timeZone: 'Europe/Berlin',\r\n    },\r\n    end: {\r\n      dateTime: '2020-05-21T17:00:00+02:00',\r\n      timeZone: 'Europe/Berlin',\r\n    },\r\n    recurringEventId: '4eahs9ghkhrvkld72hogu9ph3e',\r\n    originalStartTime: {\r\n      dateTime: '2020-05-21T16:00:00+02:00',\r\n      timeZone: 'Europe/Berlin',\r\n    },\r\n    iCalUID: '4eahs9ghkhrvkld72hogu9ph3e@google.com',\r\n    sequence: 0,\r\n    reminders: {\r\n      useDefault: true,\r\n    },\r\n    eventType: 'default',\r\n  },\r\n];\r\n\r\nexport { mockData };\r\n","import { mockData } from './mock-data';\r\nimport axios from 'axios';\r\nimport NProgress from 'nprogress';\r\n\r\nexport const getAccessToken = async () => {\r\n  const accessToken = localStorage.getItem('token');\r\n  const tokenCheck =\r\n    accessToken && (await checkToken(accessToken));\r\n  if (!accessToken || tokenCheck.error) {\r\n    await localStorage.removeItem('access_token');\r\n    const searchParams = new URLSearchParams(\r\n      window.location.search\r\n    );\r\n    const code = await searchParams.get('code');\r\n    if (!code) {\r\n      const results = await axios.get(\r\n        'https://zzzu2v97p1.execute-api.eu-central-1.amazonaws.com/dev/api/get-auth-url'\r\n      );\r\n      const { authUrl } = results.data;\r\n      return (window.location.href = authUrl);\r\n    }\r\n    return code && getToken(code);\r\n  }\r\n  return accessToken;\r\n};\r\n\r\nexport const checkToken = async (accessToken) => {\r\n  const result = await fetch(\r\n    `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\r\n  )\r\n    .then((res) => res.json())\r\n    .catch((err) => err.json());\r\n\r\n  return result;\r\n};\r\n\r\n//Check if there is a path and build URL with current path or pushState\r\nconst removeQuery = () => {\r\n  if (\r\n    window.history.pushState &&\r\n    window.location.pathname\r\n  ) {\r\n    let newurl =\r\n      window.location.protocol +\r\n      '//' +\r\n      window.location.host +\r\n      window.location.pathname;\r\n\r\n    window.history.pushState('', '', newurl);\r\n  } else {\r\n    let newurl =\r\n      window.location.protocol +\r\n      '//' +\r\n      window.location.host;\r\n    window.history.pushState('', '', newurl);\r\n  }\r\n};\r\n\r\nconst getToken = async (code) => {\r\n  const encodeCode = encodeURIComponent(code);\r\n  const { access_token } = await fetch(\r\n    `https://zzzu2v97p1.execute-api.eu-central-1.amazonaws.com/dev/api/token/${encodeCode}`\r\n  )\r\n    .then((res) => {\r\n      return res.json();\r\n    })\r\n    .catch((error) => error);\r\n  access_token &&\r\n    localStorage.setItem('access_token', access_token);\r\n  return access_token;\r\n};\r\n\r\nexport const extractLocations = (events) => {\r\n  let extractLocations = events.map(\r\n    (event) => event.location\r\n  );\r\n  let locations = [...new Set(extractLocations)];\r\n  return locations;\r\n};\r\n\r\nexport const getEvents = async () => {\r\n  NProgress.start();\r\n\r\n  if (window.location.href.startsWith('http://localhost')) {\r\n    NProgress.done();\r\n    return mockData;\r\n  }\r\n  const token = await getAccessToken();\r\n  if (token) {\r\n    removeQuery();\r\n    const url = `https://zzzu2v97p1.execute-api.eu-central-1.amazonaws.com/dev/api/get-events/${token}`;\r\n\r\n    const result = await axios.get(url);\r\n    if (result.data) {\r\n      let locations = extractLocations(result.data.events);\r\n      localStorage.setItem(\r\n        'lastEvents',\r\n        JSON.stringify(result.data)\r\n      );\r\n      localStorage.setItem(\r\n        'locations',\r\n        JSON.stringify(locations)\r\n      );\r\n    }\r\n    NProgress.done();\r\n    return result.data.events;\r\n  }\r\n};\r\n","import React, { Component } from 'react';\r\n\r\nclass NumberOfEvents extends Component {\r\n  state = {\r\n    numberOfEvents: '',\r\n  };\r\n  handleInputChange = (event) => {\r\n    const numberValue = event.target.value;\r\n    this.props.updateEvents(undefined, numberValue);\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"numberOfEvents\">\r\n        <label className=\"number-label\">\r\n          Number of Events to display:\r\n          <input\r\n            type=\"number\"\r\n            className=\"number number-input\"\r\n            value={this.props.numberOfEvents}\r\n            onChange={this.handleInputChange}\r\n          />\r\n        </label>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NumberOfEvents;\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport EventList from './EventList';\r\nimport CitySearch from './CitySearch';\r\nimport { extractLocations, getEvents } from './api';\r\nimport NumberOfEvents from './NumberOfEvents';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    events: [],\r\n    locations: [],\r\n    locationSelected: 'all',\r\n    numberOfEvents: 20,\r\n  };\r\n\r\n  componentDidMount() {\r\n    //make sure it is mounted before populating the state\r\n    this.mounted = true;\r\n    console.log('component did mount');\r\n    getEvents().then((events) => {\r\n      console.log('component did mount - getEvents');\r\n      this.setState({\r\n        events,\r\n        locations: extractLocations(events),\r\n      });\r\n    });\r\n  }\r\n  componentWillUnmount() {\r\n    this.mounted = false;\r\n  }\r\n  updateEvents = (location, eventCount) => {\r\n    if (eventCount === undefined) {\r\n      eventCount = this.state.numberOfEvents;\r\n    } else this.setState({ numberOfEvents: eventCount });\r\n    if (location === undefined) {\r\n      location = this.state.locationSelected;\r\n    }\r\n    getEvents().then((events) => {\r\n      const locationEvents =\r\n        location === 'all'\r\n          ? events\r\n          : events.filter(\r\n              (event) => event.location === location\r\n            );\r\n      this.setState({\r\n        events: locationEvents.slice(0, eventCount),\r\n        numberOfEvents: eventCount,\r\n        locationSelected: location,\r\n      });\r\n    });\r\n  };\r\n  render() {\r\n    // const events = mockData;\r\n    return (\r\n      <div className=\"App\">\r\n        <CitySearch\r\n          locations={this.state.locations}\r\n          updateEvents={this.updateEvents}\r\n        />\r\n        <NumberOfEvents\r\n          updateEvents={this.updateEvents}\r\n          numberOfEvents={this.state.numberOfEvents}\r\n        />\r\n        <EventList events={this.state.events} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://cra.link/PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://cra.link/PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport { createRoot } from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nconst root = createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\nserviceWorkerRegistration.unregister();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}